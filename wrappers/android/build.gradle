buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 27

        externalNativeBuild.cmake {
            cppFlags += ["-frtti", "-fexceptions", "-fvisibility=hidden", "-std=c++14"]
            arguments += ["-DRSID_PREVIEW=ON"]
        }

        ndk.abiFilters = ['arm64-v8a', 'x86_64']
    }

    flavorDimensions "default"
    productFlavors {
        unsecured {
            dimension "default"
            externalNativeBuild.cmake {
                arguments += ["-DRSID_SECURE=OFF", "-DRSID_TOOLS=OFF"]
            }
        }
        secured {
            dimension "default"
            externalNativeBuild.cmake {
                arguments += ["-DRSID_SECURE=ON", "-DRSID_TOOLS=ON"]
            }
        }
    }

    externalNativeBuild {
        cmake {
            path = "../../CMakeLists.txt"
            version "3.10.0+"
        }
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            resValue "string", "app_version", "${defaultConfig.versionName}"
        }

        release {
            minifyEnabled false
            resValue "string", "app_version", "${defaultConfig.versionName}"
        }
    }
    ndkVersion '22.0.7026061'

    libraryVariants.all { variant ->
        variant.outputs.all { output ->
            def libName = "RealSenseID"
            def buildType = variant.buildType.name
            def newName = "${libName}_${buildType}.aar"

            outputFileName = newName
        }
    }
}

project.afterEvaluate {
        // It allows CMake/SWIG to run before Android Studio complains about missing generated files
        javaPreCompileUnsecuredDebug.dependsOn externalNativeBuildUnsecuredDebug
        javaPreCompileUnsecuredRelease.dependsOn externalNativeBuildUnsecuredRelease
        javaPreCompileSecuredDebug.dependsOn externalNativeBuildSecuredDebug
        javaPreCompileSecuredRelease.dependsOn externalNativeBuildSecuredRelease
}